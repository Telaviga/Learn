cd - перемещение к каталогу; 
cd .. - на каталог выше
pwd - файлы в текущем каталоге
ls - список файлов в текущем каталоге; 
	-a  - включая скрытые;
	-aF - включая типы
	-l  - Вывод в длинном формате: перед именами файлов выдается режим доступа, количество ссылок 
	      на файл, имена владельца и группы, размер в байтах и время последней модификации 
	      (см. ниже).
	      Если файл является специальным, то в поле размера выводится старший и младший номера
	      устройства. 
	-R  - Рекурсивно обойти встретившиеся подкаталоги.
	-a  - Вывести список всех файлов (обычно не выводятся файлы, имена которых начинаются с точки, 
	      то есть скрытые файлы).
	-d  - Если аргумент является каталогом, то выводить только его имя, а не содержимое. Часто 
	      используется с флагом -l для получения сведений о состоянии каталога.
	-C  - Вывод в несколько колонок с сортировкой по колонкам.
	-x  - Вывод в несколько колонок с сортировкой по строкам.
	-m  - Вывод в свободном формате, имена файлов разделяются запятыми.
	-l  - Вывод в длинном формате: перед именами файлов выдается режим доступа, количество ссылок 
	      на файл, имена владельца и группы, размер в байтах и время последней модификации 
	      (см. ниже). 
	      Если файл является специальным, то в поле размера выводится старший и младший номера
	      устройства.
	-n  - То же, что и -l, но идентификаторы владельца и группы выводятся в виде чисел, а не
	      в виде имен.
	-o  - То же, что и -l, но идентификатор группы не выводится.
	-g  - То же, что и -l, но идентификатор владельца не выводится.
	-r  - Изменить порядок сортировки на обратный алфавитный или, при наличии флага -t, сначала
	      выводить более старые файлы.
	-t  - Имена файлов сортируются не по алфавиту, а по времени (сначала идут самые свежие файлы).
	      По умолчанию используется время последнего изменения. См. также флаги -u и -c.
	-u  - Вместо времени последнего изменения использовать время последнего доступа для сортировки
	      (с флагом -t) или для вывода (с флагом -l).
	-c    Вместо времени последнего изменения использовать время последней модификации описателя
	      файла (т.е. время создания файла, изменения режима доступа к нему и т.п.) для сортировки 
	      (с флагом -t) или для вывода (с флагом -l).
	-p  - Если файл является каталогом, то выдавать после его имени символ /.
	-F  - Если файл является каталогом, то выдавать после его имени символ /; если файл является 
	      выполняемым, то выдавать после его имени символ *.
	-b  - Выдавать непечатаемые символы, входящие в имя файла, в восьмеричном виде (\ddd).
	-q  - Выдавать непечатаемые символы, входящие в имя файла, в виде символа ?.
	-i  - Выдавать в первой колонке номера описателей файлов.
	-s  - Выдавать размер файлов в блоках (включая косвенные блоки).
	-f  - Рассматривать каждый аргумент как каталог и выводить его содержимое. Этот флаг отменяет 
	      флаги -l, -t, -s, -r и включает флаг -a. Сортировка имен файлов не производится; имена 
	      выдаются в таком порядке, в каком они перечислены в каталоге.

	Режим доступа к файлу при указании флага -l выводится в виде 10 символов. Первый символ означает:
	d	- Файл является каталогом.
	b	- Файл является специальным блочным файлом.
	c	- Файл является специальным символьным файлом.
	p	- Файл является именованным каналом. 
cd 	- установка каталога домашним
		История поиск
history - список исторри вводимых команд;
history 10	- история последних 10 команд
ctrl+r	- поиск команды из истории (например sudo)
!43	- последняя команда из истории под номером 43
!!	- повтор последней команды
!	- повтор последних команд после ! поставить l (например последняя была ls)
echo $HISTSIZE	- количество команд в сохранении
HISTSIZE=100	- изменения количество строк сохранений в истории
	
	| - аргумент последовательности и
	|| - или аргумент последовательности в случае неудачи то есть 1 (неверно1)
	& 	- приписать команде для выполнения в фоновом режиме
	$?	- код завершения предыдущей команды 0 (верно) или 1 (неверно)
	&&	- выполнение последовательности оператора, исполнение при 0 (верно)
	; 	- создание разделение команд в одной строке
	&&||	- последовательность при верном или неверном значении 
	#	- коментарий
	\	- экранирование символов \№\ = №
	\вконце - продолжение в следующей строке
	$(имяпеременной) - переменная, выводит путь или значение переменной
	qs=ls 	- создание переменной
	' - одинарные кавычки позволяют предотвратить раскрытие команды
	" - двойные кавычки позволяют осуществлять раскрытие переменных в строке команды
set - или +x - Вывод информации о раскрытии команд командной оболочкой
unset - удаление переменной из окружения командной оболочки
PS1=name - замена отображения имени пользователя в командной оболочки
PS1='\u@\h:\W$' - возврат отображения имени пользователя в командной оболочки по умолчанию
$PATH - Переменная окружения $PATH устанавливает директории файловой системы, в которых командная оболочка ищет бинарные файлы, необходимые для исполнения команд
which - Команда which осуществляет поиск бинарных файлов в директории, заданной с помощью переменной окружения $PATH 
su - super user
cp - копирование файла
mv - переименование или перемещение файла
rm - удаление файла
	* - все файлы с суфиксом (например *~ *.txt и тд)
	[]- содержащие значение
	-r - включая содержимое
mkdir - создание директории
	-p - создание директории и ее родителей
rmdir - удаление директории; 
	rmdir -r - удаление со всем содержимым
touch - создание файла или установка нового времени модификации
	{1..10} {a..z} -  создание или удаление очередности файлов
	
<	- взять из файла	out
>	- записать в файл	in
>>	- дописать в файл	in
2>	- записать в файл	err
2>>	- дописать в файл	err
cat - копирует данные из потока ввода в поток вывода (перевод concatenate - обьединитть)
	echo один > one1 и при команде cat one1 будет вывод один
	cat > test.txt - обьединение файлов, далее ввод текста будет файле
	выйти ctrl+d
	<<stop- конец команды 
less - просмотр содержимого файла с пейджингом
	q - выход
	/ - поиск 
	g - в начало 
	G - в конец
nano 		- редактировать файл

jobs		- посмтореть запущенные программы
Ctrl+X  - выход
ctrl+D 			- конец файла процесса;
ctrl+C; ctrl+\  - сняттие процесса;
ctrl+Z 		- приостановка процесса задачи
		fg 	- продолжить (foreground)
		bg 	- продолжить в фоновом режиме (background)
		fg %<номер>	- продолжить прогрпмму с этим номером
		bg %<номер>	- продолжить программу с этим номером в фоновом режиме
ps 		- вывод процессов на экран;
	ps axu  - дополнительно информация о владельцев;
	ps ax 	- список существующих процесов
top 			- активные процессы в реальном времени
top -u <имя пользователя> - активные процессы указанного пользователя
	q 	-выход
kill (номер процесса) 	- снятие процесса
kill -9 <номер_процесса> - убить процесс
mann 		- и имя команды что бы получить справку по команде

echo 		- вывод строки текста в терминал
	" " 	- вставка пробела или иного символа
	\ 	- экранирование апостофа ковычек
	-n 	- не выводить перевод строки;
	-e 	- включить поддержку вывода Escape последовательностей;
	-E 	- отключить интерпретацию Escape последовательностей.
	/c 	- удалить перевод строки;
	/t 	- горизонтальная табуляция;
	/v 	- вертикальная табуляция;
	/b 	- удалить предыдущий символ;
	/n 	- перевод строки;
	/r 	- символ возврата каретки в начало строки.

head 		- вывод первых десяти строк файла head - далее путь к файлу
	-4 	- вывод для первых 4 строк файла 
	-c4 	- вывод первых n байт файла
tail 		- вывод последних 10 строк файла
	-4 	- вывод для первых 4 строк файла 
	-c4 	- вывод первых n байт файла

tac 		- илюстрация с помощью единственного примера
more 		- имя файла для просмотра содержимого, выйти ctrl+d, пробел листать
string 		- вывод строк бинарного читаемого файла (вывод сокращен)
which ls 	- показывает путь директории
man hier 	- информация иерархии системы
--help 		- помощь руководство
/ 		- корневая директория

chmod - изменения прав доступа
umask - маска прав доступа
chown - изменение хозяина
chgrp - изменение группы
	400	-r--------   - Владелец файла может только читать файл. Для всех остальных все
			       действия с файлом запрещены.
	644	-rw-r--r--   - Все пользователи могут читать файл. Владелец может изменять файл.
	660	-rw-rw----   - Владелец и группа могут читать и изменять файл. Для всех остальных
			       все действия с файлом запрещены.
	664	-rw-rw-r--   - Все могут читать файл. Владелец и группа могут изменять.
	666	-rw-rw-rw-   - Все могут читать и изменять файл.
	700	-rwx------   - Владелец может читать, изменять и запускать файл. Для всех остальных
			       все действия с файлом запрещены.
	744	-rwxr--r--   - Все могут читать файл. Владелец может также изменять и запускать файл.
	755	-rwxr-xr-x   - Все могут читать и запускать файл. Владелец может также изменять файл.
	777	-rwxrwxrwx   - Все пользователи могут читать, изменять и редактировать файл.
	u	- Владелец-пользователь.
	g	- Группа.
	o	- Все остальные.
	a	- Вообще все.
	+	- Добавляет к текущим правам доступа новое разрешение.
	-	- Удаляет из текущих прав доступа определенное разрешение.
	=	- Устанавливает полностью новые разрешения (предыдущие перезаписываются новыми).

	
type - Для установления того, будет ли переданная командной оболочке команда исполнена как внешняя
       команда или как встроенная команда, следует использовать специальную команду type.

alias - позволяет вам создавать псевдонимы команд (alias tac="cat" или alias qwe="ls -la")

wget ссылка 			  - скачать файл по ссылке и сохранить в текущей директории
wget -P путь до директории ссылка - скачать файл по ссылке и сохранить в директории заданным путем
wget -O путь до файла ссылка 	  - скачать файл по ссылке и сохранить под указанным именем
wget -c ссылка			  - докачать файл по ссылке в случае обрыва связи
wget --spider ссылка		  - проверить доступность файлв по ссылке
wget -i текстовый файл		  - скачать несколько файлов по ссылкам из текстового файла
wget -r -l глубина ссылка	  - рекурсивное скачивание файлов по ссылке на указанную глубину 
				    (по умолчанию глубина 5)
wget -r -A тип,тип,тип, ссылка	  - рекурсивное скачивание файлов только определенного типа (типов)
unzip архив.zip		   - распаковать содержимое архива.zip
gunzip архив.gz		   - распаковать содержимое архива.gz, файл архив.gz удалить
zip архив.zip файл1 файл2  - запаковать перечисленные файлы или/и папки в архив.zip
gzip файл 		   - запаковать файл в файл.gz, исходный файл удалить 
tar -cvf архив.tar файл1 файл2   - запаковать перечисленные файлы и/или папки в архив.tar (без сжатия)
gzip архив.tar 		   запаковать архив.tar в архив.tar.gz, исходный архив.tar удалить 

	Создание архивов:
tar -zcvf архив.tar.gz файл1 файл2   - запаковать перечисленные файлы и/или папки в архив.tar.gz (с сжатием при помощи gzip)

	Распаковка архивов:
tar -xvf архив.tar	- распаковать архив.tar.gz
tar -xzvf архив.tar.gz	- распаковать архив.tar.gz (с использованием gunzip)

	Еще один архиватор:
bzip2		- файл 
bunzip2		- файл.bz2
tar -cjvf архив.tar.bz2 файл1 файл2
tar -xjvf архив.tar.bz2

	Сжатие распаковка без удаления:
gzip -c файл > файл.gz
gunzip -c файл.gz > файл
bzip2 -c файл > файл.bz2
bunzip2 -c файл.bz2 > файл

	Поиск файлов папок:
find <папка> -name "<имя файла>"	- найти указанный файл в папке
find ~/ -name "file.txt"		- найти file.txt в домашней директории
find ~/ -name "*.txt"			- найти все текстовые файлы в домашней директории
grep "<строка>" <файл>		- найти строку в файле
grep -c "<трока>" <файл> 	- посчитать количество вхождений строки
grep -r "<строка>" <папка>	- найти строку во всех файлах в папке
grep "hello" file.txt		- найти "hello" в файле file.txt
grep -c "123" file.txt 		- вывести количество раз "123" встречается в file.txt
grep -r "world" ~/		- найти "world" во всех файлах в домашней директории

ssh логин@адрес_сервера -p порт		- команда входа
ssh-keygen				- создание ключа
ssh-add					- сообщить системе о ключе
cat ~/.ssh/id_rsa.pub			- просмотр публичного ключа
nano ~/.ssh/authorised_keys - редактирование авторизованных ключей (на сервере)
	Копирование файлов:
scp -P порт логин@адрес_сервера:путь1 путь2	- с сервера(путь1) на клиент(путь2)
scp -P порт путь1 логин@адрес_сервера:путь2	- с клиента(путь1) на сервер(путь2)
	
sudo apt-get install программа	- установка программ через терминал
sudo apt-get remove программа	- удаление программы через терминал
sudo apt-get update	- обновление ссылок на пакеты
sudo apt-get upgrade	- обновление установленных пакетов
sudo apt-get install --only-upgrade программа	- обновление отдельной программы

	информация о:
free -g		- нформация об оперативной памяти
nproc		- информация о количестве ядер процессора
lscpu		- детальная информация о процессоре



Полезный совет:

Для многих длинных команд полезно создавать акронимы (сокращения). Акронимы создаются в виде переменных окружения терминала на текущую сессию командой export. Например если у Вас нет команды ll, то можно создать этот акроним самим командой в консоли: export "ll=ls -l -a". Этот акроним будет действовать только на текущий сеанс работы с консолью и при  отключении от терминала он исчезнет.

Если Вы хотите сохранить акроним навсегда, то его надо добавить в конец текстового файла  .bashrc в Вашем домашнем каталоге. Этот файл содержит настройки вашей оболочки bash. Сделать это можно например используя текстовый редактор nano (он удобнее чем vim для работы с обычными текстовыми файлами). Команда: nano /home/rinat/.bashrc. После внесения изменений в файл сохраните его нажав CTRL+O и можете выйти из редактора, нажав CTRL+X.






